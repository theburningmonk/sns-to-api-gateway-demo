service: sns-to-apigw-demo

plugins:
  - serverless-apigateway-service-proxy

provider:
  name: aws
  runtime: nodejs10.x

custom:
  apiGatewayServiceProxies:
    - kinesis:
        path: /kinesis
        method: post
        streamName: { Ref: 'MyStream' }
        cors: true

# after the API Gateway resource is deployed, you need to go to the API Gateway console
# find the API, go to resources, click on the POST action for the /kinesis resource
# go to "Integration Request", under "Mapping Templates", add a new mapping for `text/plain`
# because when SNS sends messages to HTTP endpoints it sends `text/plain` as content-type
# then you need to add the following VTL code (and change the stream name to match your stream)
# save changes, and then redeploy the API to your stage

# #set($msgBody = $util.parseJson($input.body))
# #set($msgId = $msgBody.MessageId)
# {
#     "Data": "$util.base64Encode($input.body)",
#     "PartitionKey": "$msgId",
#     "StreamName": "sns-to-apigw-demo-dev-MyStream-RZBM6QXES72J"
# }

functions:
  api-gw:
    handler: functions/apigw.handler
    events:
      - http:
          path: /
          method: post
  
  kinesis:
    handler: functions/kinesis.handler
    events:
      - stream:
          type: kinesis
          arn:
            Fn::GetAtt: [MyStream, Arn]

# you can add CloudFormation resource templates here
resources:
  Resources:
    Topic:
      Type: AWS::SNS::Topic

    MyStream:
      Type: AWS::Kinesis::Stream
      Properties:
        ShardCount: 1
